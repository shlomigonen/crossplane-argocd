apiVersion: cluster.argocd.crossplane.io/v1alpha1
kind: Cluster
metadata:
  name: argo-reference-demo-env-eks
  labels:
    purpose: dev
spec:
  forProvider:
    config:
      kubeconfigSecretRef:
        key: kubeconfig
        name: demo-env-eks-access # Secret containing our kubeconfig to access the Crossplane created EKS cluster
        namespace: crossplane-system # and it's in the crossplane-system namespace
    name: demo-env-eks # name of the Cluster registered in ArgoCD
  providerConfigRef:
    name: argocd-provider

---
# Use the spec.group/spec.versions[0].name defined in the XRD
apiVersion: k8s.unnefer.com/v1alpha1
# Use the spec.claimName or spec.name specified in the XRD
kind: KubernetesCluster
metadata:
  namespace: default
  name: demo-env-eks
spec:
  id: demo-env-eks
  parameters:
    route53zoneId: Z094046337RP232QYZKYI
    region: eu-central-1
    nodes:
      count: 3
  # Crossplane creates the secret object in the same namespace as the Claim
  # see https://docs.crossplane.io/latest/concepts/claims/#claim-connection-secrets
  writeConnectionSecretToRef:
    name: demo-env-eks-access    
